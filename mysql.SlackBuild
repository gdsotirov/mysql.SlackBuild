#!/bin/sh
#
# Slackware build script for MySQL 8.0
# Copyright (C) 2006-2022 Georgi D. Sotirov <gdsotirov@gmail.com>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# Visit SlackPack at https://sotirov-bg.net/slackpack/
#
# ~~~
#
# Based on the original script maintained by Patrick Volkerding <volkerdi@slackware.com>
#
# Copyright 2008, 2009, 2010  Patrick J. Volkerding, Sebeka, Minnesota, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

. ../../slack-package.conf

NAME=mysql
VERSION=8.0.29
VER_PATCH=${VERSION##*.}
# MySQL Client library version
# See https://mysqlserverteam.com/the-client-library-part-2-the-version-number/
SO_VER_MAJ=21
SO_VER_MIN=2
SO_VER_PATCH=${VER_PATCH}
ARCH=${ARCH:-i586}
if [ "${ARCH}" == "x86_64" ]; then
  MAKE_JOBS=4
else
  MAKE_JOBS=8
fi
BUILD=${BUILD:-1}

TMP=${TMP:-/tmp}
CWD=${CWD:-`pwd`}
PKG_DIR=${PKG_DIR:-/tmp}

if [ ! -e $TMP ]; then
  mkdir --parents $TMP # location to build the source
fi

BOOST_SRC=$TMP/boost_1_77_0
SRC=$TMP/${NAME}-${VERSION}
if [ -e $SRC -a -d $SRC ]; then
  echo "Source directory '$SRC' already exists! Plaese, move it or remove it."
  exit 1
fi

PKG=$TMP/package-${NAME}
if [ -e $PKG -a -d $PKG ]; then
  echo "Package creation directory '$PKG' already exists! Please, move it or remove it."
  exit 2
fi
mkdir --parents $PKG

# Extract and fix source
cd $TMP
tar --extract --verbose --file=$CWD/${NAME}-${VERSION}.tar.gz || exit 3
cd $SRC
fix_source

# Patch (if any)
if [ -e $CWD/${NAME}-${VERSION}.diff ]; then
  patch --backup --strip=1 --suffix= .orig < $CWD/${NAME}-${VERSION}.diff || exit 4
fi

# Configure
# See https://dev.mysql.com/doc/refman/8.0/en/source-configuration-options.html
mkdir --parents build; cd build
cmake .. -LAH \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_CXX_COMPILER=g++ \
        -DCMAKE_CXX_FLAGS="$SLKCFLAGS" \
        -DCMAKE_C_COMPILER=gcc \
        -DCMAKE_C_FLAGS="$SLKCFLAGS" \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DCMAKE_MAKE_PROGRAM=gmake \
        -DDOWNLOAD_BOOST=ON \
        -DENABLED_PROFILING=ON \
        -DFEATURE_SET="community" \
        -DINNODB_COMPILER_HINTS=ON \
        -DINSTALL_BINDIR=bin \
        -DINSTALL_DOCDIR=doc/${NAME}-${VERSION} \
        -DINSTALL_DOCREADMEDIR=doc/${NAME}-${VERSION} \
        -DINSTALL_INCLUDEDIR=include/$NAME \
        -DINSTALL_LAYOUT=STANDALONE \
        -DINSTALL_LIBDIR=lib${LIBDIRSUFFIX} \
        -DINSTALL_MANDIR=man \
        -DINSTALL_MYSQLDATADIR=lib/$NAME \
        -DINSTALL_MYSQLSHAREDIR=share/$NAME \
        -DINSTALL_PLUGINDIR=lib${LIBDIRSUFFIX}/$NAME/plugin \
        -DINSTALL_SBINDIR=sbin \
        -DINSTALL_SHAREDIR=share/$NAME \
        -DINSTALL_SUPPORTFILESDIR=/etc/$NAME \
        -DMYSQL_DATADIR=/var/lib/$NAME \
        -DSYSCONFDIR=/etc/$NAME \
        -DWITH_ARCHIVE_STORAGE_ENGINE=ON \
        -DWITH_AUTHENTICATION_LDAP=ON \
        -DWITH_BLACKHOLE_STORAGE_ENGINE=ON \
        -DWITH_BOOST=$TMP \
        -DWITH_CURL=system \
        -DWITH_EDITLINE=system \
        -DWITH_EXAMPLE_STORAGE_ENGINE=ON \
        -DWITH_EXTRA_CHARSETS=all \
        -DWITH_FEDERATED_STORAGE_ENGINE=ON \
        -DWITH_ICU=system \
        -DWITH_INNODB_MEMCACHED=ON \
        -DWITH_LIBEVENT=system \
        -DWITH_LZ4=system \
        -DWITH_NUMA=ON \
        -DWITH_PROTOBUF=system \
        -DWITH_RAPIDJSON=bundled \
        -DWITH_ROUTER=OFF \
        -DWITH_SSL=system \
        -DWITH_UNIT_TESTS=ON \
        -DWITH_ZLIB=system \
        -DWITH_ZSTD=system || exit 5

# Build and install
make --jobs=${MAKE_JOBS} VERBOSE=1 || exit 6
make test || exit 7
make install DESTDIR=$PKG || exit 8
cd ..

# Custom install steps
# - Remove test suite
rm --recursive $PKG/usr/mysql-test

# - Move logrotate configuration in the right place
install --mode 755 --directory $PKG/etc/logrotate.d
install --mode 644 --preserve-timestamps \
        $PKG/etc/$NAME/mysql-log-rotate $PKG/etc/logrotate.d/$NAME

# - Make sure /etc/my.cnf.d directory exists
install --mode 755 --directory $PKG/etc/my.cnf.d

# - Add init scripts
install --mode 755 --directory $PKG/etc/rc.d
install --mode 744 --preserve-timestamps \
        $PKG/etc/$NAME/mysql.server $PKG/etc/rc.d/rc.mysqld.new

# - Create databases storage location
install --directory --group mysql --mode 750 --owner mysql $PKG/var/lib/$NAME
# - Create socket storage location
install --directory --group mysql --mode 755 --owner mysql $PKG/var/run/$NAME

# Prepare
bin_perms $PKG
sbin_perms $PKG
(cd $PKG; strip_bin; strip_lib)
gzip_man $PKG
DOCFILES="$DOCFILES BUILD-CMAKE"
create_docs $PKG ${NAME}-${VERSION}

# Remove static libraries
( cd $PKG;
  rm usr/lib${LIBDIRSUFFIX}/libmysqlservices.a
  rm usr/lib${LIBDIRSUFFIX}/libmysqlclient.a )

# Add some handy library symlinks:
MYSQL_CLIENT_SO=libmysqlclient.so.${SO_VER_MAJ}.${SO_VER_MIN}.${SO_VER_PATCH}
if [ -r $PKG/usr/lib${LIBDIRSUFFIX}/${MYSQL_CLIENT_SO} ]; then
  ( cd $PKG/usr/lib${LIBDIRSUFFIX}
    ln -sf ${MYSQL_CLIENT_SO} libmysqlclient.so.20   # compatible with 5.7
  )
else
  echo "File '$PKG/usr/lib${LIBDIRSUFFIX}/${MYSQL_CLIENT_SO}' is not readable!'"
  exit 9
fi

# Install script and info
install --mode 755 --directory $PKG/install
install --mode 644 --preserve-timestamps \
        $CWD/doinst.sh       $PKG/install/doinst.sh
install --mode 644 --preserve-timestamps \
        $CWD/slack-desc      $PKG/install/slack-desc
install --mode 644 --preserve-timestamps \
        $CWD/slack-required  $PKG/install/slack-required
install --mode 644 --preserve-timestamps \
        $CWD/slack-suggests  $PKG/install/slack-suggests
install --mode 644 --preserve-timestamps \
        $CWD/slack-conflicts $PKG/install/slack-conflicts

SBDIR=$PKG/usr/src/slackbuilds/${NAME}-${VERSION}
install --mode 755 --directory $SBDIR
install --mode 644 --preserve-timestamps \
        $CWD/COPYING         $SBDIR/COPYING
install --mode 644 --preserve-timestamps \
        $CWD/README          $SBDIR/README
install --mode 644 --preserve-timestamps \
        $CWD/doinst.sh       $SBDIR/doinst.sh
install --mode 644 --preserve-timestamps \
        $CWD/slack-desc      $SBDIR/slack-desc
install --mode 644 --preserve-timestamps \
        $CWD/slack-required  $SBDIR/slack-required
install --mode 644 --preserve-timestamps \
        $CWD/slack-suggests  $SBDIR/slack-suggests
install --mode 644 --preserve-timestamps \
        $CWD/slack-conflicts $SBDIR/slack-conflicts
install --mode 644 --preserve-timestamps \
        $CWD/rc.mysqld       $SBDIR/rc.mysqld
if [ -e $CWD/${NAME}-${VERSION}.diff ]; then
install --mode 644 --preserve-timestamps \
        $CWD/${NAME}-${VERSION}.diff $SBDIR/${NAME}-${VERSION}.diff
fi
install --mode 644 --preserve-timestamps \
        $CWD/${NAME}.SlackBuild $SBDIR/${NAME}.SlackBuild

# Build package:
cd $PKG
PKGNAME=${NAME}-${VERSION}-${ARCH}-${BUILD}${MYIN}
makepkg --chown n --linkadd y $PKG_DIR/${PKGNAME}.txz
md5sum $PKG_DIR/${PKGNAME}.txz > $PKG_DIR/${PKGNAME}.txz.md5
install --mode 644 $PKG/install/slack-desc $PKG_DIR/${PKGNAME}.txt

if [ "$1" == "--cleanup" ]; then
   rm ${BOOST_SRC}.tar.bz2
   rm --recursive $BOOST_SRC
   rm --recursive $SRC
   rm --recursive $TMP/package-${NAME}
fi

